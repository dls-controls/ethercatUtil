#==============================================================================
# Ethercat GUI ELM3704 channel template
#
# Contains channel-level PVs for an ELM3704 analog input module.
#
# Macros
# % macro, P,         PV prefix
# % macro, R,         PV suffix
# % macro, CHANNEL,   Channel number
# % macro, PORT,      Asyn port of slave module
# % macro, LOGICPORT, Asyn port for driver logic
# % macro, ENTRY,     Entry name for raw value
# % macro, SCAN,      Scan period of raw value
#
#==============================================================================

# Template for CSS channel detail pane
include "ethercat_gui_ELM3704_channel_detail.template"

record(longin, "$(P):$(R):CH$(CHANNEL):CHANNEL")
{
    field(DESC, "Channel number")
    field(VAL,  "$(CHANNEL)")
    field(PINI, "YES")
}

record(bi, "$(P):$(R):CH$(CHANNEL):LOADED")
{
    field(DESC, "Helper record for EDM GUI refresh")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):LOADED")
    field(SCAN, "I/O Intr")
    field(VAL,  "0")
    field(ZNAM, "Yes")
    field(ONAM, "No")
}

record(mbbo, "$(P):$(R):CH$(CHANNEL):TYPE")
{
    field(DESC, "Measurement type")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):TYPE")
    field(VAL,  "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(FRVL, "4")
    field(FVVL, "5")
    field(SXVL, "6")
    field(SVVL, "7")
    field(EIVL, "8")
    field(NIVL, "9")
    field(TEVL, "10")
    field(ELVL, "11")
    field(ZRST, "None")
    field(ONST, "Voltage")
    field(TWST, "Current")
    field(THST, "Potentiometer")
    field(FRST, "Thermocouple")
    field(FVST, "IEPE")
    field(SXST, "Strain Gauge FB")
    field(SVST, "Strain Gauge HB")
    field(EIST, "Strain Gauge QB 2 wire")
    field(NIST, "Strain Gauge QB 3 wire")
    field(TEST, "RTD")
}

record(mbbi, "$(P):$(R):CH$(CHANNEL):TYPE_RBV")
{
    field(DESC, "Measurement type readback")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):TYPE")
    field(SCAN, "I/O Intr")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(FRVL, "4")
    field(FVVL, "5")
    field(SXVL, "6")
    field(SVVL, "7")
    field(EIVL, "8")
    field(NIVL, "9")
    field(TEVL, "10")
    field(ELVL, "11")
    field(ZRST, "None")
    field(ONST, "Voltage")
    field(TWST, "Current")
    field(THST, "Potentiometer")
    field(FRST, "Thermocouple")
    field(FVST, "IEPE")
    field(SXST, "Strain Gauge FB")
    field(SVST, "Strain Gauge HB")
    field(EIST, "Strain Gauge QB 2 wire")
    field(NIST, "Strain Gauge QB 3 wire")
    field(TEST, "RTD")
}

record(mbbo, "$(P):$(R):CH$(CHANNEL):SUBTYPE")
{
    field(DESC, "Measurement subtype")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):SUBTYPE")
    field(VAL,  "0")
    field(ZRST, "None")
    info(asyn:READBACK, "1")
}

record(mbbi, "$(P):$(R):CH$(CHANNEL):SUBTYPE_RBV")
{
    field(DESC, "Measurement subtype readback")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):SUBTYPE")
    field(SCAN, "I/O Intr")
    field(ZRST, "None")
}

record(longin, "$(P):$(R):CH$(CHANNEL):RAW")
{
    field(DESC, "Raw value")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT))$(ENTRY)")
    field(FLNK, "$(P):$(R):CH$(CHANNEL):VAL")
    field(SCAN, "$(SCAN)")
    info(archiver, "1 Monitor")
}

record(stringout, "$(P):$(R):CH$(CHANNEL):ALIAS")
{
    field(DESC, "Channel alias")
    field(VAL,  "")
    field(PINI, "YES")
    info(autosaveFields, "VAL")
}

record(ao, "$(P):$(R):CH$(CHANNEL):SCALE")
{
    field(DESC, "Scale factor")
    field(VAL,  1)
    field(PINI, "YES")
    field(FLNK, "$(P):$(R):CH$(CHANNEL):VAL")
    info(autosaveFields, "VAL")
    info(archiver, "1 Monitor")
}

record(ao, "$(P):$(R):CH$(CHANNEL):OFFSET")
{
    field(DESC, "Offset")
    field(VAL,  0)
    field(PINI, "YES")
    field(FLNK, "$(P):$(R):CH$(CHANNEL):VAL")
    info(autosaveFields, "VAL")
    info(archiver, "1 Monitor")
}

record(calc, "$(P):$(R):CH$(CHANNEL):VAL")
{
    field(DESC, "Scaled value")
    field(INPA, "$(P):$(R):CH$(CHANNEL):RAW")
    field(INPB, "$(P):$(R):CH$(CHANNEL):SCALE")
    field(INPC, "$(P):$(R):CH$(CHANNEL):OFFSET")
    field(CALC, "A*B+C")
    info(archiver, "1 Monitor")
}

record(mbbo, "$(P):$(R):CH$(CHANNEL):SENSOR_SUPPLY")
{
    field(DESC, "Sensor supply voltage")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):SENSOR_SUPPLY")
    field(VAL,  "0")
    field(ZRST, "N/A")
    info(asyn:READBACK, "1")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P):$(R):CH$(CHANNEL):SENSOR_SUPPLY_RBV")
{
    field(DESC, "Sensor supply voltage")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):SENSOR_SUPPLY")
    field(SCAN, "I/O Intr")
    field(ZRST, "N/A")
}

record(mbbo, "$(P):$(R):CH$(CHANNEL):RTD_PAGE")
{
    field(DESC, "RTD element page")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):RTD_ELEMENT_PAGE")
    field(VAL,  "0")
    field(ZRST, "N/A")
    info(asyn:READBACK, "1")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P):$(R):CH$(CHANNEL):RTD_PAGE_RBV")
{
    field(DESC, "RTD element page")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):RTD_ELEMENT_PAGE")
    field(SCAN, "I/O Intr")
    field(ZRST, "N/A")
}

record(mbbo, "$(P):$(R):CH$(CHANNEL):RTD_ELEMENT")
{
    field(DESC, "RTD element")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):RTD_ELEMENT")
    field(VAL,  "0")
    field(ZRST, "N/A")
    info(asyn:READBACK, "1")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P):$(R):CH$(CHANNEL):RTD_ELEMENT_RBV")
{
    field(DESC, "RTD element")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):RTD_ELEMENT")
    field(SCAN, "I/O Intr")
    field(ZRST, "N/A")
}

record(mbbo, "$(P):$(R):CH$(CHANNEL):TC_PAGE")
{
    field(DESC, "TC element page")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):TC_ELEMENT_PAGE")
    field(VAL,  "0")
    field(ZRST, "N/A")
    info(asyn:READBACK, "1")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P):$(R):CH$(CHANNEL):TC_PAGE_RBV")
{
    field(DESC, "TC element page")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):TC_ELEMENT_PAGE")
    field(SCAN, "I/O Intr")
    field(ZRST, "N/A")
}

record(mbbo, "$(P):$(R):CH$(CHANNEL):TC_ELEMENT")
{
    field(DESC, "TC element")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):TC_ELEMENT")
    field(VAL,  "0")
    field(ZRST, "N/A")
    info(asyn:READBACK, "1")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P):$(R):CH$(CHANNEL):TC_ELEMENT_RBV")
{
    field(DESC, "TC element")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):TC_ELEMENT")
    field(SCAN, "I/O Intr")
    field(ZRST, "N/A")
}

record(mbbo, "$(P):$(R):CH$(CHANNEL):SCALER")
{
    field(DESC, "Measurement scaling")
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):SCALER")
    field(VAL,  "0")
    field(ZRST, "N/A")
    info(asyn:READBACK, "1")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P):$(R):CH$(CHANNEL):SCALER_RBV")
{
    field(DESC, "Measurement scaling readback")
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):SCALER")
    field(SCAN, "I/O Intr")
    field(ZRST, "N/A")
}

record(stringin, "$(P):$(R):CH$(CHANNEL):STATUS")
{
    field(DESC, "Status message")
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(LOGICPORT),0) CH$(CHANNEL):STATUS")
    field(SCAN, "I/O Intr")
}